namespace Disco.Serialization;

//  _____
// | ____|_ __ _ __ ___  _ __
// |  _| | '__| '__/ _ \| '__|
// | |___| |  | | | (_) | |
// |_____|_|  |_|  \___/|_|

enum ErrorTypeFB:ushort {
     GitErrorFB,
     ProjectErrorFB,
     AssetErrorFB,
     ParseErrorFB,
     SocketErrorFB,
     ClientErrorFB,
     IOErrorFB,
     RaftErrorFB,
     OKFB,
     OtherFB
}

table ErrorFB {
      Type: ErrorTypeFB;
      Location: string;
      Message: string;
}

//  _  __        __     __    _
// | |/ /___ _   \ \   / /_ _| |_   _  ___
// | ' // _ \ | | \ \ / / _` | | | | |/ _ \
// | . \  __/ |_| |\ V / (_| | | |_| |  __/
// |_|\_\___|\__, | \_/ \__,_|_|\__,_|\___|
//           |___/

table KeyValueFB {
      Key: string;
      Value: string;
}

//  __  __            _     _            ____  _        _
// |  \/  | __ _  ___| |__ (_)_ __   ___/ ___|| |_ __ _| |_ _   _ ___
// | |\/| |/ _` |/ __| '_ \| | '_ \ / _ \___ \| __/ _` | __| | | / __|
// | |  | | (_| | (__| | | | | | | |  __/___) | || (_| | |_| |_| \__ \
// |_|  |_|\__,_|\___|_| |_|_|_| |_|\___|____/ \__\__,_|\__|\__,_|___/

enum MachineStatusEnumFB:ushort {
      IdleFB = 0,
      BusyFB
}

table MachineStatusFB {
      Status: MachineStatusEnumFB;
      ProjectId: [ubyte];
      ProjectName: string;
}

//  ___      _     __  __            _     _
// |_ _|_ __(_)___|  \/  | __ _  ___| |__ (_)_ __   ___
//  | || '__| / __| |\/| |/ _` |/ __| '_ \| | '_ \ / _ \
//  | || |  | \__ \ |  | | (_| | (__| | | | | | | |  __/
// |___|_|  |_|___/_|  |_|\__,_|\___|_| |_|_|_| |_|\___|

table DiscoMachineFB {
      MachineId: [ubyte];
      HostName: string;
      WorkSpace: string;
      AssetDirectory: string;
      AssetFilter: string;
      LogDirectory: string;
      CollectMetrics: bool;
      MetricsHost: string;
      MetricsPort: ushort;
      MetricsDb: string;
      MulticastAddress: string;
      MulticastPort: ushort;
      BindAddress: string;
      WebPort: ushort;
      RaftPort: ushort;
      WsPort: ushort;
      GitPort: ushort;
      ApiPort: ushort;
      Version: string;
}

//  ____       _
// |  _ \ ___ | | ___
// | |_) / _ \| |/ _ \
// |  _ < (_) | |  __/
// |_| \_\___/|_|\___|

enum RoleFB:ushort {
     RendererFB = 0
}

//  ____  _       _    __
// |  _ \| | __ _| |_ / _| ___  _ __ _ __ ___
// | |_) | |/ _` | __| |_ / _ \| '__| '_ ` _ \
// |  __/| | (_| | |_|  _| (_) | |  | | | | | |
// |_|   |_|\__,_|\__|_|  \___/|_|  |_| |_| |_|

enum PlatformFB:ushort {
     WindowsFB = 0,
     UnixFB 
}

//  ____                  _          ____  _        _
// / ___|  ___ _ ____   _(_) ___ ___/ ___|| |_ __ _| |_ _   _ ___
// \___ \ / _ \ '__\ \ / / |/ __/ _ \___ \| __/ _` | __| | | / __|
//  ___) |  __/ |   \ V /| | (_|  __/___) | || (_| | |_| |_| \__ \
// |____/ \___|_|    \_/ |_|\___\___|____/ \__\__,_|\__|\__,_|___/

enum ServiceStatusTypeFB:ushort {
    StartingFB,
    RunningFB,
    StoppingFB,
    StoppedFB,
    DegradedFB,
    FailedFB,
    DisposedFB
}

table ServiceStatusFB {
    Type: ServiceStatusTypeFB;
    Error: ErrorFB;
}

//  _____   _____
// |  ___|_|_   _| __ ___  ___
// | |_ / __|| || '__/ _ \/ _ \
// |  _|\__ \| || | |  __/  __/
// |_|  |___/|_||_|  \___|\___|

table FsPathFB {
    Drive: ushort;
    Platform: PlatformFB;
    Elements: [string];
}

enum FsEntryTypeFB:ushort {
    FileFB = 0,
    DirectoryFB
}

table FsInfoFB {
    Type: FsEntryTypeFB;
    Path: FsPathFB;
    Name: string;
    MimeType: string;
    Size: uint;
    Filtered: uint;
}

table FsEntryFB {
    Root: FsInfoFB;
    Children: [FsInfoFB];
}

table FsEntryUpdateFB {
    HostId: [ubyte];
    Entry: FsEntryFB;
    Path: FsPathFB;
}

table FsTreeFB {
    HostId: [ubyte];
    Root: FsInfoFB;
    Filters: string;
    Children: [FsInfoFB];
}

table FsTreeUpdateFB {
    HostId: [ubyte];
    Tree: FsTreeFB;
}

//   ____ _ _            _
//  / ___| (_) ___ _ __ | |_
// | |   | | |/ _ \ '_ \| __|
// | |___| | |  __/ | | | |_
//  \____|_|_|\___|_| |_|\__|

table DiscoClientFB {
     Id: [ubyte];
     Name: string;
     Role: RoleFB;
     Port: ushort;
     ServiceId: [ubyte];
     Status: ServiceStatusFB;
     IpAddress: string;
}

//  ____  _
// |  _ \(_)___  ___ _____   _____ _ __ _   _
// | | | | / __|/ __/ _ \ \ / / _ \ '__| | | |
// | |_| | \__ \ (_| (_) \ V /  __/ |  | |_| |
// |____/|_|___/\___\___/ \_/ \___|_|   \__, |
//                                      |___/

enum ExposedServiceTypeFB:ushort {
     GitFB = 0,
     RaftFB,
     HttpFB,
     WebSocketFB,
     ApiFB
}

table ExposedServiceFB {
     Type: ExposedServiceTypeFB;
     Port: ushort;
}

table DiscoveredServiceFB {
     Id: [ubyte];
     Name: string;
     FullName: string;
     HostName: string;
     HostTarget: string;
     Aliases: [string];
     Protocol: string;
     AddressList: [string];
     Services: [ExposedServiceFB];
     Status: MachineStatusFB;
     ExtraMetadata: [KeyValueFB];
}

//  ____  _        _             _____ ____
// / ___|| |_ _ __(_)_ __   __ _|  ___| __ )
// \___ \| __| '__| | '_ \ / _` | |_  |  _ \
//  ___) | |_| |  | | | | | (_| |  _| | |_) |
// |____/ \__|_|  |_|_| |_|\__, |_|   |____/
//                         |___/

table StringFB {
     Value: string;
}

table DoubleFB {
     Value: double;
}

table BoolFB {
     Trigger: bool;
     Value: bool;
}

table ByteFB {
     Value: string;
}

table ClockFB {
     Value: uint;
}

//  _                _____                 _
// | |    ___   __ _| ____|_   _____ _ __ | |_
// | |   / _ \ / _` |  _| \ \ / / _ \ '_ \| __|
// | |__| (_) | (_| | |___ \ V /  __/ | | | |_
// |_____\___/ \__, |_____| \_/ \___|_| |_|\__|
//             |___/

table LogEventFB {
     Time: uint;
     Thread: int;
     Tier: string;
     MachineId: [ubyte];
     Tag: string;
     LogLevel: string;
     Message: string;
}

//  ____  _ _
// / ___|| (_) ___ ___
// \___ \| | |/ __/ _ \
//  ___) | | | (_|  __/
// |____/|_|_|\___\___|

enum BehaviorFB:ushort {
     SimpleFB = 0,
     MultiLineFB = 1,
     FileNameFB = 2,
     DirectoryFB = 3,
     UrlFB = 4,
     IPFB = 5
}

table RGBAValueFB {
     Red:   ubyte;
     Green: ubyte;
     Blue:  ubyte;
     Alpha: ubyte;
}

table HSLAValueFB {
     Hue: ubyte;
     Saturation: ubyte;
     Lightness: ubyte;
     Alpha: ubyte;
}

union ColorSpaceTypeFB {
      RGBAValueFB,
      HSLAValueFB
}

table ColorSpaceFB {
      Value: ColorSpaceTypeFB;
}

union SliceTypeFB {
      StringFB,
      DoubleFB,
      BoolFB,
      ByteFB,
      KeyValueFB,
      ColorSpaceFB,
}

table SliceFB {
      Index: int;
      Slice: SliceTypeFB;
}


table StringsFB {
     Values: [string];
}

table DoublesFB {
     Values: [double];
}

table BoolsFB {
     Trigger: bool;
     Values: [bool];
}

table BytesFB {
     Values: [string];
}

table KeyValuesFB {
     Values: [KeyValueFB];
}

table ColorSpacesFB {
     Values: [ColorSpaceFB];
}

union SlicesTypeFB {
     StringsFB,
     DoublesFB,
     BoolsFB,
     BytesFB,
     KeyValuesFB,
     ColorSpacesFB
}

table SlicesFB {
      PinId: [ubyte];
      ClientId: [ubyte];
      Slices: SlicesTypeFB;
}

enum PinConfigurationFB:ushort {
      SinkFB = 0,
      SourceFB = 1,
      PresetFB = 2,
}

enum VecSizeTypeFB:ushort {
      DynamicFB = 0,
      FixedFB = 1,
}

table VecSizeFB {
      Type: VecSizeTypeFB;
      Size: ushort;
}

//  ____  _
// |  _ \(_)_ __
// | |_) | | '_ \
// |  __/| | | | |
// |_|   |_|_| |_|

table StringPinFB {
      Id:               [ubyte];
      Name:             string;
      PinGroupId:       [ubyte];
      ClientId:         [ubyte];
      Tags:             [KeyValueFB];
      Persisted:        bool;
      Online:           bool;
      Dirty:            bool;
      PinConfiguration: PinConfigurationFB;
      VecSize:          VecSizeFB;
      Behavior:         BehaviorFB;
      MaxChars:         int;
      Labels:           [string];
      Values:           [string];
}

table NumberPinFB {
      Id:               [ubyte];
      Name:             string;
      PinGroupId:       [ubyte];
      ClientId:         [ubyte];
      Tags:             [KeyValueFB];
      Unit:             string;
      Precision:        uint;
      Persisted:        bool;
      Dirty:            bool;
      Online:           bool;
      PinConfiguration: PinConfigurationFB;
      VecSize:          VecSizeFB;
      Min:              int;
      Max:              int;
      Labels:           [string];
      Values:           [double];
}

table BoolPinFB {
      Id:               [ubyte];
      Name:             string;
      PinGroupId:       [ubyte];
      ClientId:         [ubyte];
      Tags:             [KeyValueFB];
      IsTrigger:        bool;
      Persisted:        bool;
      Dirty:            bool;
      Online:           bool;
      PinConfiguration: PinConfigurationFB;
      VecSize:          VecSizeFB;
      Labels:           [string];
      Values:           [bool];
}

table BytePinFB {
      Id:               [ubyte];
      Name:             string;
      PinGroupId:       [ubyte];
      ClientId:         [ubyte];
      Tags:             [KeyValueFB];
      Persisted:        bool;
      Dirty:            bool;
      Online:           bool;
      PinConfiguration: PinConfigurationFB;
      VecSize:          VecSizeFB;
      Labels:           [string];
      Values:           [string];
}

table EnumPinFB {
      Id:               [ubyte];
      Name:             string;
      PinGroupId:       [ubyte];
      ClientId:         [ubyte];
      Tags:             [KeyValueFB];
      Properties:       [KeyValueFB];
      Persisted:        bool;
      Dirty:            bool;
      Online:           bool;
      PinConfiguration: PinConfigurationFB;
      VecSize:          VecSizeFB;
      Labels:           [string];
      Values:           [KeyValueFB];
}

table ColorPinFB {
      Id:               [ubyte];
      Name:             string;
      PinGroupId:       [ubyte];
      ClientId:         [ubyte];
      Tags:             [KeyValueFB];
      VecSize:          VecSizeFB;
      Persisted:        bool;
      Dirty:            bool;
      Online:           bool;
      PinConfiguration: PinConfigurationFB;
      Labels:           [string];
      Values:           [ColorSpaceFB];
}

union PinTypeFB {
      StringPinFB,
      NumberPinFB,
      BoolPinFB,
      BytePinFB,
      EnumPinFB,
      ColorPinFB,
}

table PinFB {
      Pin: PinTypeFB;
}

//   ____
//  / ___|_ __ ___  _   _ _ __
// | |  _| '__/ _ \| | | | '_ \
// | |_| | | | (_) | |_| | |_) |
//  \____|_|  \___/ \__,_| .__/
//                       |_|

table PinGroupFB {
      Id:   [ubyte];
      Name: string;
      ClientId: [ubyte];
      Path: string;
      Pins: [PinFB];
      RefersTo: ReferencedValueFB;
}

enum ReferencedValueTypeFB:ushort {
     PlayerFB = 0,
     WidgetFB
}

table ReferencedValueFB {
      Type: ReferencedValueTypeFB;
      Id: [ubyte];
}

table PinGroupMapFB {
      Groups: [PinGroupFB];
}

//   ____
//  / ___|   _  ___
// | |  | | | |/ _ \
// | |__| |_| |  __/
//  \____\__,_|\___|

table CueFB {
      Id: [ubyte];
      Name: string;
      Slices: [SlicesFB];
}

table CueReferenceFB {
      Id: [ubyte];
      CueId: [ubyte];
      AutoFollow: bool;
      Duration: int;
      Prewait: int;
}

table CueGroupFB {
      Id: [ubyte];
      Name: string;
      AutoFollow: bool;
      CueRefs: [CueReferenceFB];
}

//   ____           _     _     _
//  / ___|   _  ___| |   (_)___| |_
// | |  | | | |/ _ \ |   | / __| __|
// | |__| |_| |  __/ |___| \__ \ |_
//  \____\__,_|\___|_____|_|___/\__|

table CueListFB {
      Id:   [ubyte];
      Name: string;
      Items: [CueGroupFB];
}

//  _   _
// | | | |___  ___ _ __
// | | | / __|/ _ \ '__|
// | |_| \__ \  __/ |
//  \___/|___/\___|_|

table UserFB {
      Id:        [ubyte];
      UserName:  string;
      FirstName: string;
      LastName:  string;
      Email:     string;
      Password:  string;
      Salt:      string;
      Joined:    string;
      Created:   string;
}

//  ____                _
// / ___|  ___  ___ ___(_) ___  _ __
// \___ \ / _ \/ __/ __| |/ _ \| '_ \
//  ___) |  __/\__ \__ \ | (_) | | | |
// |____/ \___||___/___/_|\___/|_| |_|

table SessionFB {
      Id:        [ubyte];
      IpAddress: string;
      UserAgent: string;
}

//  ____        __ _   __  __                _
// |  _ \ __ _ / _| |_|  \/  | ___ _ __ ___ | |__   ___ _ __
// | |_) / _` | |_| __| |\/| |/ _ \ '_ ` _ \| '_ \ / _ \ '__|
// |  _ < (_| |  _| |_| |  | |  __/ | | | | | |_) |  __/ |
// |_| \_\__,_|_|  \__|_|  |_|\___|_| |_| |_|_.__/ \___|_|

enum MemberStatusFB:ubyte {
     JoiningFB = 0,
     RunningFB = 1,
     FailedFB  = 2
}

enum MemberStateFB:ubyte {
     LeaderFB = 0,
     CandidateFB = 1,
     FollowerFB = 2
}

table RaftMemberFB {
      Id:               [ubyte];             
      HostName:         string;        
      IpAddress:        string;       
      MulticastAddress: string;
      MulticastPort:    ushort;   
      HttpPort:         ushort;        
      RaftPort:         ushort;        
      WsPort:           ushort;          
      GitPort:          ushort;         
      ApiPort:          ushort;         
      Voting:           bool;            
      VotedForMe:       bool;        
      State:            MemberStateFB;
      Status:           MemberStatusFB;
      NextIndex:        int;          
      MatchIndex:       int;         
}

//   ____             __ _
//  / ___|___  _ __  / _(_) __ _
// | |   / _ \| '_ \| |_| |/ _` |
// | |__| (_) | | | |  _| | (_| |
//  \____\___/|_| |_|_| |_|\__, |
//                         |___/

table AudioConfigFB {
      SampleRate: uint;
}

table ClientExecutableFB {
      Id: [ubyte];
      Executable: string;
      Version: string;
      Required: bool;
}

table ClientConfigFB {
      Executables: [ ClientExecutableFB ];
}

table RaftConfigFB {
      RequestTimeout: int;
      ElectionTimeout: int;
      MaxLogDepth: int;
      LogLevel: string;
      DataDir: string;
      MaxRetries: int;
      PeriodicInterval: int;
}

table TimingConfigFB {
      Framebase: uint;
      Input: string;
      Servers: [ string ];
      UDPPort: uint;
      TCPPort: uint;
}

table HostGroupFB {
      Name: string;
      Members: [ string ];
}

table ClusterMemberFB {
      Id:               [ubyte];             
      HostName:         string;        
      IpAddress:        string;       
      MulticastAddress: string;
      MulticastPort:    ushort;   
      HttpPort:         ushort;        
      RaftPort:         ushort;        
      WsPort:           ushort;          
      GitPort:          ushort;         
      ApiPort:          ushort;         
      State:            MemberStateFB;
      Status:           MemberStatusFB;
}

table ClusterConfigFB {
      Id: [ubyte];
      Name: string;
      Members: [ ClusterMemberFB ];
      Groups: [ HostGroupFB ];
}

table ConfigFB {
      Version:      string;
      Machine:      DiscoMachineFB;
      ActiveSite:   [ubyte];
      AudioConfig:  AudioConfigFB;
      ClientConfig: ClientConfigFB;
      RaftConfig:   RaftConfigFB;
      TimingConfig: TimingConfigFB;
      Sites:        [ ClusterConfigFB ];
}

//  ____            _           _
// |  _ \ _ __ ___ (_) ___  ___| |_
// | |_) | '__/ _ \| |/ _ \/ __| __|
// |  __/| | | (_) | |  __/ (__| |_
// |_|   |_|  \___// |\___|\___|\__|
//               |__/

table ProjectFB {
      Id:        [ubyte];
      Name:      string;
      Path:      string;
      CreatedOn: string;
      LastSaved: string;
      Copyright: string;
      Author:    string;
      Config:    ConfigFB;
}

//   ____           ____  _
//  / ___|   _  ___|  _ \| | __ _ _   _  ___ _ __
// | |  | | | |/ _ \ |_) | |/ _` | | | |/ _ \ '__|
// | |__| |_| |  __/  __/| | (_| | |_| |  __/ |
//  \____\__,_|\___|_|   |_|\__,_|\__, |\___|_|
//                                |___/

table CuePlayerFB {
      Id:            [ubyte];
      Name:          string;
      Locked:        bool;
      Active:        bool;
      Selected:      int;
      RemainingWait: int;
      CueListId:     [ubyte];
      CallId:        [ubyte];
      NextId:        [ubyte];
      PreviousId:    [ubyte];
      LastCalledId:  [ubyte];
      LastCallerId:  [ubyte];
}

//  ____        _       _
// | __ )  __ _| |_ ___| |__
// |  _ \ / _` | __/ __| '_ \
// | |_) | (_| | || (__| | | |
// |____/ \__,_|\__\___|_| |_|

table TransactionFB {
      Commands: [StateMachineFB];
}

//  ____  _ _          __  __             _____ ____
// / ___|| (_) ___ ___|  \/  | __ _ _ __ |  ___| __ )
// \___ \| | |/ __/ _ \ |\/| |/ _` | '_ \| |_  |  _ \
//  ___) | | | (_|  __/ |  | | (_| | |_) |  _| | |_) |
// |____/|_|_|\___\___|_|  |_|\__,_| .__/|_|   |____/
//                                 |_|

table SlicesMapFB {
      Slices: [SlicesFB];
}

//  ____  _       __  __                   _
// |  _ \(_)_ __ |  \/  | __ _ _ __  _ __ (_)_ __   __ _
// | |_) | | '_ \| |\/| |/ _` | '_ \| '_ \| | '_ \ / _` |
// |  __/| | | | | |  | | (_| | |_) | |_) | | | | | (_| |
// |_|   |_|_| |_|_|  |_|\__,_| .__/| .__/|_|_| |_|\__, |
//                            |_|   |_|            |___/

table PinMappingFB {
      Id: [ubyte];
      Source: [ubyte];
      Sinks: [string];
}

//  ____  _    __        ___     _            _
// |  _ \(_)_ _\ \      / (_) __| | __ _  ___| |_
// | |_) | | '_ \ \ /\ / /| |/ _` |/ _` |/ _ \ __|
// |  __/| | | | \ V  V / | | (_| | (_| |  __/ |_
// |_|   |_|_| |_|\_/\_/  |_|\__,_|\__, |\___|\__|
//                                 |___/

table PinWidgetFB {
      Id: [ubyte];
      Name: string;
      WidgetType: [ubyte];
}

//  ____  _        _
// / ___|| |_ __ _| |_ ___
// \___ \| __/ _` | __/ _ \
//  ___) | || (_| | ||  __/
// |____/ \__\__,_|\__\___|

table StateFB {
      Project:            ProjectFB;
      PinGroups:          PinGroupMapFB;
      PinMappings:        [PinMappingFB];
      PinWidgets:         [PinWidgetFB];
      Cues:               [CueFB];
      CueLists:           [CueListFB];
      Sessions:           [SessionFB];
      Users:              [UserFB];
      Clients:            [DiscoClientFB];
      CuePlayers:         [CuePlayerFB];
      FsTrees:            [FsTreeFB]; 
      DiscoveredServices: [DiscoveredServiceFB];
}

//  ____  _        _       __  __            _     _
// / ___|| |_ __ _| |_ ___|  \/  | __ _  ___| |__ (_)_ __   ___
// \___ \| __/ _` | __/ _ \ |\/| |/ _` |/ __| '_ \| | '_ \ / _ \
//  ___) | || (_| | ||  __/ |  | | (_| | (__| | | | | | | |  __/
// |____/ \__\__,_|\__\___|_|  |_|\__,_|\___|_| |_|_|_| |_|\___|

union StateMachinePayloadFB {
      CueFB,
      CueListFB,
      PinFB,
      PinGroupFB,
      PinGroupMapFB,
      DiscoClientFB,
      RaftMemberFB,
      ClusterMemberFB,
      UserFB,
      SessionFB,
      LogEventFB,
      StringFB,
      StateFB,
      SlicesMapFB,
      ProjectFB,
      CuePlayerFB,
      DiscoveredServiceFB,
      ClockFB,
      TransactionFB,
      PinMappingFB,
      PinWidgetFB,
      FsEntryUpdateFB,
      FsTreeUpdateFB,
}

enum StateMachineActionFB:ushort {
      AddFB,
      UpdateFB,
      RemoveFB,
      BatchFB,
      LogEventFB,
      DataSnapshotFB,
      CallFB,
      UndoFB,
      RedoFB,
      ResetFB,
      SaveFB,
      SetLogLevelFB,
}

table StateMachineFB {
      Action: StateMachineActionFB;
      Payload: StateMachinePayloadFB;
}